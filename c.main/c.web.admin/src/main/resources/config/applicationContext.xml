<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="     
          http://www.springframework.org/schema/beans     
          http://www.springframework.org/schema/beans/spring-beans.xsd     
          http://www.springframework.org/schema/tx     
          http://www.springframework.org/schema/tx/spring-tx.xsd    
          http://www.springframework.org/schema/context     
          http://www.springframework.org/schema/context/spring-context.xsd     
          http://www.springframework.org/schema/aop     
          http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/mvc
		  http://www.springframework.org/schema/mvc/spring-mvc.xsd
		  http://www.springframework.org/schema/cache 
		  http://www.springframework.org/schema/cache/spring-cache.xsd
		  ">

	<aop:aspectj-autoproxy />

	<!-- 启用注解 -->
	<context:annotation-config />
	<!-- 启动缓存注解 -->
	<cache:annotation-driven />

	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/configuration.xml" />
		<property name="mapperLocations" value="classpath:com/lt/shop/dao/**/*.xml" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lt.shop.dao.*" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:sys.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置dbcp连接池 -->
	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<property name="logAbandoned" value="${jdbc.logAbandoned}"></property>
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}"></property>
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"></property>
		<property name="maxWait" value="${jdbc.maxWait}"></property>
		<property name="validationQuery" value="${jdbc.validationQuery}"></property>
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}"></property>
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}"></property>
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"></property>
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"></property>
	</bean>


	<!-- 邮箱 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${email.smtp}</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
		<property name="username">
			<value>${email.username}</value>
		</property>
		<property name="password">
			<value>${email.password}</value>
		</property>
	</bean>
	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>${email.from}</value>
		</property>
		<property name="subject">
			<value>${email.subject}</value>
		</property>
	</bean>

	<bean id="sendMail" class="com.common.utils.Email">
		<property name="mailMessage">
			<ref bean="mailMessage" />
		</property>
		<property name="mailSender">
			<ref bean="mailSender" />
		</property>
	</bean>


	<!-- 配置redis部分 start -->

	<!-- 配置redis连接池 JedisPoolConfig -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="300" />
		<property name="maxTotal" value="1000" />
		<property name="maxWaitMillis" value="1000" />
	</bean>

	<!-- 配置CoonnectionFactory JedisConnectionFactory -->
	<bean id="connFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="password" value="${redis.pass}" />
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>

	<!-- 配置redisTemplate StringRedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connFactory" />
	</bean>

	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="com.common.utils.RedisUtils">
					<property name="redisTemplate" ref="redisTemplate" />
					<property name="name" value="RespOrderDetail" />
					<!-- Order名称要在类或方法的注解中使用 -->
				</bean>
			</set>
		</property>
	</bean>
	<!-- 配置redis部分 end -->
	
	<bean id="commonExceptionHandler" class="com.lt.shop.exception.CommonExceptionHandler" />

</beans>
    